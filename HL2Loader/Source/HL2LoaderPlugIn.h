//=================================================================================================//
// filename: HL2LoaderPlugIn.h                                                          //
//                                                                                                 //
//           ATI Research, Inc.                                                                    //
//           3D Application Research Group                                                         //
//                                                                                                 //
// description: GeometryPlugIn template file generated by Wizard                                   //
//                                                                                                 //
//=================================================================================================//
//   (C) 2004 ATI Research, Inc.  All rights reserved.                                             //
//=================================================================================================//

#ifndef _HL2Loader_PlugIn_H_
#define _HL2Loader_PlugIn_H_

#include <d3d9.h>
#include <d3dx9.h>
#pragma comment( lib, "RmGfxUtil.lib" )
#pragma comment( lib, "d3dx9.lib" )
#pragma comment( lib, "d3d9.lib" )
#include <strsafe.h>
#include <fstream>
#include "optimize.h"//vtxfile header
using namespace std;
using namespace OptimizedModel;
struct Vertex{
	mstudiovertex_t	studiovertex;
	Vector4D vecTangent;
};
// Forward declaration:
class CHL2LoaderPlugIn;

//..............................................................................................................//
//..............................................................................................................//
//..............................................................................................................//
//
// Geometry loader class declaration. This particular geometry loader's purpose is to load the DirectX X meshes
// into RenderMonkey's model data files. See SDK/Include/Core/IRmPlugIn.h for definition of 
// IRmGeometryLoaderPlugIn
//
//..............................................................................................................//
//..............................................................................................................//
//..............................................................................................................//
class CHL2LoaderPlugIn : public IRmGeometryLoaderPlugIn
{
public :
   CHL2LoaderPlugIn();
   virtual ~CHL2LoaderPlugIn();

   //..............................................................................................
   // Methods below are inherited from IRmGeometryLoaderPlugIn
   //..............................................................................................

   //---------------------------------------------------------------------------------
   // This method returns a list of file extensions that are supported by this geometry
   // loader plug-in for importing geometry from. These values are used to control the
   // display of files in the FileOpen dialog for model load. Note that number of entries
   // for 'formatDescriptions' and 'formatExtensions' must match.
   //
   // Eg. For X file, extension = "*.X"
   //                 text      = "X Studio File (*.X)"
   //
   //---------------------------------------------------------------------------------
   virtual void GetSupportedExtensions( RmLinkedList<RmStringT> &formatDescriptions,
                                        RmLinkedList<RmStringT> &formatExtensions );

   //---------------------------------------------------------------------------------
   // Method checks whether this plug-in can load geometry in the specified file
   // based on its own criteria. Returns true if it can load the file and false 
   // otherwise.
   //---------------------------------------------------------------------------------
   virtual bool CanLoadGeometry( const RM_TCHAR *strFileName );

   //---------------------------------------------------------------------------------
   // This method gets called by the main application to read in geometry data from
   // a particular file ('strFileName') into the specified model data container
   // ('pModelContainer')
   //---------------------------------------------------------------------------------
   virtual bool LoadGeometry( const RM_TCHAR *strFileName, RmMeshModelContainer *pModelContainer );

   //---------------------------------------------------------------------------------
   // This method is used to perform plug-in specific initialization/uninitialization
   //---------------------------------------------------------------------------------
   virtual bool Init(); 
   virtual void Uninitialize(); 

   //---------------------------------------------------------------------------------
   // This method is used by RenderMonkey to determine what type of the plug-in this
   // one is and what type of nodes it is supposed to be associated with. See 
   // Wizard/Include/Core/IRmPlugIn.h for more details.
   //---------------------------------------------------------------------------------
   virtual const RmPlugInDescription& GetPlugInDescription() const { return m_plugInDesc; };

   //---------------------------------------------------------------------------------
   // RenderMonkey main message handling entry point. RenderMonkey communicates
   // all of its events with the loaded plug-ins via messages. See 
   // Wizard/Include/Core/RmDefines.h for more details on each message.
   //---------------------------------------------------------------------------------
   virtual int MessageHandler(   int nMessageID,
                                 int nMessageData,
                                 int nMessageParameter = 0,
                                 const RmPlugInID* pRmPlugInID = NULL );

private:    // Data:

   // Plug-in description structure:
   RmPlugInDescription m_plugInDesc;
}; // End of CHL2LoaderPlugIn


#endif // End of _HL2Loader_PlugIn_H_
